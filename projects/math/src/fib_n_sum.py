"""Benchmarks some algorithms that calculate
the sum of the n even-valued terms of the Fibonacci sequence
by considering only the terms whose values do not exceed twelve million.
The Fibonacci sequence:  0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
Where F(0) = 0, F(1) = 1 and F(n) = F(n - 1) + F(n - 2) for n > 1.
So, each term greater than 1 is generated by adding the previous two terms.
For example, the 6th element of the sequence is 8.
"""
__author__ = 'Joan A. Pinol  (japinol)'

import logging
import traceback

from fibonacci.fib_sum1_ite import fib_sum as fib_sum1
from fibonacci.fib_sum2_ite import fib_sum as fib_sum2


logging.basicConfig(format='%(asctime)s %(levelname)s %(name)s: %(message)s')
logger = logging.getLogger(__name__)
logger.setLevel(logging.DEBUG)


def write_result(res, n):
    print(f"Sum for limit {n}: {res}\n{'-'*10}")


def main():
    limit = 12_000_000  # Top limit for the terms' values

    print("> An iterative programming solution.")
    res = fib_sum1(limit)
    write_result(res, limit)

    print("> An iterative programming solution using a list in the very algorithm.")
    res = fib_sum2(limit)
    write_result(res, limit)


if __name__ == '__main__':
    try:
        main()
    except Exception as e:
        traceback.print_tb(e.__traceback__)
        logger.critical(f'Error: {e}')
